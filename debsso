#!/usr/bin/python3
from debssolib.certs import Certs
from debssolib.cli import Command, Cli
from debssolib.advocate import Advocate
import sys
import os
import subprocess
import requests

class Exec(Command):
    """
    Run curl adding extra options to use Debian SSO client certificates
    """
    def argument_parser(self):
        parser = super().argument_parser()
        parser.usage = parser.prog + " [command options...]"
        return parser

    def run(self):
        parser = self.argument_parser()
        args, unparsed = parser.parse_known_args()
        certs = Certs.from_browser()
        with certs.tempfiles() as files:
            env = dict(os.environ)
            # TODO: export common wget/curl envs for certs if they exist
            env["DEBSSO_CERT_KEY"] = files.key_pathname
            env["DEBSSO_CERT_CRT"] = files.crt_pathname
            proc = subprocess.Popen(unparsed, env=env)
            res = proc.wait()
        sys.exit(res)


class Curl(Command):
    """
    Run curl adding extra options to use Debian SSO client certificates
    """
    def argument_parser(self):
        parser = super().argument_parser()
        parser.usage = parser.prog + " [curl options...]"
        return parser

    def run(self):
        parser = self.argument_parser()
        args, unparsed = parser.parse_known_args()
        certs = Certs.from_browser()
        with certs.tempfiles() as files:
            cmd = ["curl", "--key", files.key_pathname, "--cert", files.crt_pathname]
            cmd.extend(unparsed)
            proc = subprocess.Popen(cmd)
            res = proc.wait()
        sys.exit(res)


class Whoami(Command):
    """
    Connect to https://nm.debian.org/api/whoami and return information about
    the current user.
    """
    def run(self):
        certs = Certs.from_browser()
        with certs.tempfiles() as files:
            res = requests.get("https://nm.debian.org/api/whoami", cert=(files.crt_pathname, files.key_pathname))
            print(res.text)


def main():
    cli = Cli()
    cli.commands.append(Curl())
    cli.commands.append(Exec())
    cli.commands.append(Whoami())
    cli.commands.append(Advocate())
    cli.run()


if __name__ == "__main__":
    main()
