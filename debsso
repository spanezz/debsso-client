#!/usr/bin/python3
from debssolib.certs import Certs
from debssolib.utils import Cli, Command
import sys
import os
import subprocess
import argparse
import logging


class Exec(Command):
    """
    Exec command with client certificates available in the file system. Use --
    before the rest of the command line
    """
    @classmethod
    def add_parser(cls, subparsers):
        sp = super().add_parser(subparsers)
        sp.add_argument("args", nargs="+", help="command line to exec")
        return sp

    def run(self, args):
        certs = Certs.from_browser()
        with certs.tempfiles() as files:
            env = dict(os.environ)
            # TODO: export common wget/curl envs for certs if they exist
            env["DEBSSO_CERT_KEY"] = files.key_pathname
            env["DEBSSO_CERT_CRT"] = files.crt_pathname
            proc = subprocess.Popen(args.args, env=env)
            res = proc.wait()
        sys.exit(res)


class Curl(Command):
    """
    Run curl adding options to use client certificates. Use -- before the rest of the curl command line
    """
    @classmethod
    def add_parser(cls, subparsers):
        sp = super().add_parser(subparsers)
        sp.add_argument("args", nargs="+", help="curl arguments")
        return sp

    def run(self, args):
        certs = Certs.from_browser()
        with certs.tempfiles() as files:
            cmd = ["curl", "--key", files.key_pathname, "--cert", files.crt_pathname]
            cmd.extend(args.args)
            proc = subprocess.Popen(cmd)
            res = proc.wait()
        sys.exit(res)


class Whoami(Command):
    """
    Authenticate and get user information
    """
    def run(self, args):
        certs = Certs.from_browser()
        with certs.requests() as req:
            res = req.get("https://nm.debian.org/api/whoami")
            print(res.text)


def main():
    cli = Cli(
        prog="debsso",
        description="Debian Single Sign-On command line client utility",
    )
    cli.add_command(Whoami)
    cli.add_command(Exec)
    cli.add_command(Curl)
    cli.main()


if __name__ == "__main__":
    main()
